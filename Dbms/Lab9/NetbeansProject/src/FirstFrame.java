import java.sql.CallableStatement;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author admin
 */
public class FirstFrame extends javax.swing.JFrame {

    Connection con;
    Statement stmt;

    /**
     * Creates new form FirstFrame
     */
    public FirstFrame() {
        initComponents();
        male.setSelected(true);
        try {
            Class.forName("oracle.jdbc.OracleDriver");
            //JOptionPane.showMessageDialog(null, "Driver Loaded.");

            //jdbc:oracle:thin:@localhost:1521:XE
            con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "ssn");
            stmt = con.createStatement();
            //JOptionPane.showMessageDialog(this, "Connected to Oracle Database");            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            System.exit(0);

        }

    }

    public int check() {
        if (eidtf.getText().equals("")
                || dobtf.getText().equals("")
                || enametf.getText().equals("")
                || destf.getText().equals("")
                || basictf.getText().equals("") ) 
        {
            return 0;
        }
        return 1;
    }//echeck

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        insert = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        eidtf = new javax.swing.JTextField();
        enametf = new javax.swing.JTextField();
        dobtf = new javax.swing.JTextField();
        destf = new javax.swing.JTextField();
        basictf = new javax.swing.JTextField();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        search = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        Exit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(233, 360));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        insert.setText("Insert");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });
        getContentPane().add(insert);
        insert.setBounds(520, 120, 80, 40);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("EID");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(90, 110, 50, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Name");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(90, 150, 50, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("DOB");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(90, 180, 50, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("SEX");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(90, 210, 50, 30);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Designation");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(90, 250, 90, 30);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Basic");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(90, 290, 50, 20);

        eidtf.setText("124");
        getContentPane().add(eidtf);
        eidtf.setBounds(210, 110, 90, 30);

        enametf.setText("Harish");
        getContentPane().add(enametf);
        enametf.setBounds(210, 150, 90, 30);

        dobtf.setText("12-APR-2000");
        getContentPane().add(dobtf);
        dobtf.setBounds(210, 180, 90, 30);

        destf.setText("Student");
        getContentPane().add(destf);
        destf.setBounds(210, 250, 90, 30);

        basictf.setText("50000");
        getContentPane().add(basictf);
        basictf.setBounds(210, 290, 90, 30);

        buttonGroup1.add(male);
        male.setForeground(new java.awt.Color(255, 255, 255));
        male.setText("M");
        getContentPane().add(male);
        male.setBounds(210, 210, 40, 30);

        buttonGroup1.add(female);
        female.setForeground(new java.awt.Color(255, 255, 255));
        female.setText("F");
        getContentPane().add(female);
        female.setBounds(320, 210, 31, 23);

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update);
        update.setBounds(680, 120, 90, 40);

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete);
        delete.setBounds(520, 210, 90, 40);

        search.setText("Search");
        search.setToolTipText("Scroll over to display all Records");
        search.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                searchMouseWheelMoved(evt);
            }
        });
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        getContentPane().add(search);
        search.setBounds(680, 210, 90, 40);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("EMPLOYEE PAYROLL USING JDBC");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(380, 20, 440, 50);

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        getContentPane().add(Exit);
        Exit.setBounds(610, 290, 70, 40);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EID", "Name", "Dob", "Sex", "Designation", "Basic", "DA", "HRA", "PF", "MC", "Gross", "Tot_deduc", "Net_pay"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(50);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(20000);
            jTable1.getColumnModel().getColumn(3).setMinWidth(10);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(40);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 390, 1180, 160);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\admin\\Pictures\\edit1.jpg")); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -30, 1550, 830);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        setExtendedState(FirstFrame.MAXIMIZED_BOTH);

    }//GEN-LAST:event_formWindowOpened

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        if(check()==0)
        {
            JOptionPane.showMessageDialog(this, "Some Fields are empty\nPlease fill all fields and try again.");
            return ;
        }
        
        int eid = Integer.parseInt(eidtf.getText());
        String ename = enametf.getText();
        String dob = dobtf.getText();

        String sex = male.getText();

        if (female.isSelected() == true) {
            sex = female.getText();
        }

        String designation = destf.getText();
        int basic = Integer.parseInt(basictf.getText());
        
        

        //String sql = "exec calc(" +eid +","+ basic +",'"+ ename +"','"+ sex +"','"+ dob +"','"+ designation +"')";
        try {
            CallableStatement cs = con.prepareCall("{call calc(? ,? ,? ,? ,? ,?,1)}");

            cs.setFloat(1, eid);
            cs.setFloat(2, basic);
            cs.setString(3, ename);
            cs.setString(4, sex);
            cs.setString(5, dob);
            cs.setString(6, designation);

            cs.executeUpdate();

            JOptionPane.showMessageDialog(this, "Insertion has been done successfully!!!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Insertion Error: " + ex.getMessage() + "\nCause: " + ex.getCause() + "\nError Code: " + ex.getErrorCode() + "\nStack: " + ex.getClass());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Insertion Error: " + e.getMessage() + "\nCause: " + e.getCause() + "\nStack: " + e.getClass());
        }


    }//GEN-LAST:event_insertActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_ExitActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        if(check()==0)
        {
            JOptionPane.showMessageDialog(this, "Enter the value of EID\nPlease fill it and try again.");
            return ;
        }
        DefaultTableModel dm = (DefaultTableModel) jTable1.getModel();
        int rowcount = dm.getRowCount();
        for (int i = rowcount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
        
        int eid = Integer.parseInt(eidtf.getText());
        String sql = "select * from emp_payroll where eid = " + eid;

        try {
            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next()) {
                dm.addRow(new Object[]{
                    rs.getInt(1),
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4),
                    rs.getString(5),
                    rs.getFloat(6),
                    rs.getFloat(7),
                    rs.getFloat(8),
                    rs.getFloat(9),
                    rs.getFloat(10),
                    rs.getFloat(11),
                    rs.getFloat(12),
                    rs.getFloat(13)

                });

                eid = 1;      //setting this to 1 to print error if no record is found.
            }
            if (eid != 1) {
                JOptionPane.showMessageDialog(this, "Record not Found");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Search Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_searchActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if(check()==0)
        {
            JOptionPane.showMessageDialog(this, "Enter the value of EID\nPlease fill it and try again.");
            return ;
        }
        
        int eid = Integer.parseInt(eidtf.getText());
        
        String sql = "delete from emp_payroll where eid = " + eid;
        try {
            stmt.executeQuery(sql);
            JOptionPane.showMessageDialog(this, "Deletion has been done successfully ");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Deletion Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        if(check()==0)
        {
            JOptionPane.showMessageDialog(this, "Some Fields are empty\nPlease fill all fields and try again.");
            return ;
        }
        
        int eid = Integer.parseInt(eidtf.getText());
        String ename = enametf.getText();
        String dob = dobtf.getText();

        String sex = male.getText();

        if (female.isSelected() == true) {
            sex = female.getText();
        }

        String designation = destf.getText();
        int basic = Integer.parseInt(basictf.getText());

        
        //String sql = "exec calc(" +eid +","+ basic +",'"+ ename +"','"+ sex +"','"+ dob +"','"+ designation +"')";
        try {
            CallableStatement cs = con.prepareCall("{call calc(? ,? ,? ,? ,? ,?,2)}");      //last argument !=1 for updation

            cs.setFloat(1, eid);
            cs.setFloat(2, basic);
            cs.setString(3, ename);
            cs.setString(4, sex);
            cs.setString(5, dob);
            cs.setString(6, designation);

            cs.executeUpdate();

            JOptionPane.showMessageDialog(this, "Updation has been done successfully!!!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Updation Error: " + ex.getMessage() + "\nCause: " + ex.getCause() + "\nError Code: " + ex.getErrorCode() + "\nStack: " + ex.getClass());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Updation Error: " + e.getMessage() + "\nCause: " + e.getCause() + "\nStack: " + e.getClass());
        }
    }//GEN-LAST:event_updateActionPerformed

    private void searchMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_searchMouseWheelMoved
        if(check()==0)
        {
            JOptionPane.showMessageDialog(this, "Enter the value of EID\nPlease fill it and try again.");
            return ;
        }
        DefaultTableModel dm = (DefaultTableModel) jTable1.getModel();
        int rowcount = dm.getRowCount();
        for (int i = rowcount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
        int eid = Integer.parseInt(eidtf.getText());
        String sql = "select * from emp_payroll ";

        try {
            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next()) {
                dm.addRow(new Object[]{
                    rs.getInt(1),
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4),
                    rs.getString(5),
                    rs.getFloat(6),
                    rs.getFloat(7),
                    rs.getFloat(8),
                    rs.getFloat(9),
                    rs.getFloat(10),
                    rs.getFloat(11),
                    rs.getFloat(12),
                    rs.getFloat(13)

                });

                eid = 1;      //setting this to 1 to print error if no record is found.
            }
            if (eid != 1) {
                JOptionPane.showMessageDialog(this, "Record not Found");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Search Error: " + ex.getMessage());
        }

    }//GEN-LAST:event_searchMouseWheelMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FirstFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FirstFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FirstFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FirstFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FirstFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Exit;
    private javax.swing.JTextField basictf;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton delete;
    private javax.swing.JTextField destf;
    private javax.swing.JTextField dobtf;
    private javax.swing.JTextField eidtf;
    private javax.swing.JTextField enametf;
    private javax.swing.JRadioButton female;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton male;
    private javax.swing.JButton search;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
